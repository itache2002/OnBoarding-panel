# docker-compose.yml  (Compose v2 â€“ no "version:" needed)

networks:
  traefik_net:              # shared with Traefik
    external: true
    name: root_default      # <-- change to your real Traefik network if different
  internal_net:             # private net for backend <-> db
    driver: bridge

volumes:
  newsite_db:               # unique Postgres volume

services:
  db:
    image: postgres:17-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB:       ${POSTGRES_DB}
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - newsite_db:/var/lib/postgresql/data
    networks:
      - internal_net

  backend:
    build: ./backend
    restart: unless-stopped
    env_file: .env
    environment:
      PORT: 5000
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    networks:
      - internal_net
      - traefik_net
    labels:
      - "traefik.enable=true"
      # Router
      - "traefik.http.routers.adminapi.rule=Host(`admin.api.nammellaramysuru.in`)"
      - "traefik.http.routers.adminapi.entrypoints=websecure"
      - "traefik.http.routers.adminapi.tls.certresolver=mytlschallenge"
      # Service
      - "traefik.http.services.adminapi.loadbalancer.server.port=5000"

  frontend:
    build: ./frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminweb.rule=Host(`admin.nammellaramysuru.in`)"
      - "traefik.http.routers.adminweb.entrypoints=websecure"
      - "traefik.http.routers.adminweb.tls.certresolver=mytlschallenge"
      - "traefik.http.services.adminweb.loadbalancer.server.port=3000"
