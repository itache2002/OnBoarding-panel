
services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB:       ${POSTGRES_DB}
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - traefik_net

  backend:
    build: ./backend           # ← fix: correct build context
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PORT: 4000
    depends_on:
      - postgres
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`admin.api.nammellaramysuru.in`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.services.api.loadbalancer.server.port=5000"  # ← backend port
      - "traefik.http.routers.api.tls.certresolver=mytlschallenge"   # ← resolver name

  frontend:
    build: ./frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`www.admin.nammellaramysuru.in`) || Host(`adnin.nammellaramysuru.in`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      - "traefik.http.routers.web.tls.certresolver=mytlschallenge"   # ← resolver name

volumes:
  dbdata:

networks:
  traefik_net:
    external: true
    name: root_default
